name: Build and Publish

on:
  push:

jobs:
  gradle_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - uses: actions/upload-artifact@v4
        with:
          name: vault-jar
          path: vault/build/libs/

      - name: Extract version of jar file
        id: vault-version
        run: echo VAULT_VERSION=$(ls vault/build/libs/vault-* | grep -oE "[0-9](.*)[^.jar]") >> $GITHUB_OUTPUT

  docker_build:
    needs:
      - gradle_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: vault-jar

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: | 
            BUILD_VERSION=${{ steps.vault-version.outputs.VAULT_VERSION }}
          file: ./docker/Dockerfile
          push: false
          tags: ${{ vars.registry }}/${{ github.repository_owner }}/vault:${{ steps.vault-version.outputs.VAULT_VERSION }}
          outputs: type=docker,dest=/tmp/vault-${{ steps.vault-version.outputs.VAULT_VERSION }}.tar

      - uses: actions/upload-artifact@v4
        with:
          name: vault-docker
          path: /tmp/vault-${{ steps.vault-version.outputs.VAULT_VERSION }}.tar

  docker_publish:
    env:
      version: ""
    needs:
      - docker_build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: vault-docker

      - name: Extract version of docker file
        run: echo version=$(ls vault-* | grep -oE "[0-9](.*)[^.tar]") >> $GITHUB_ENV

      - name: Docker login into ${{ vars.registry }}
        run: docker login ${{ vars.registry }} --username ${{ github.repository_owner }} --password ${{ secrets.PACKAGES_TOKEN }}

      - name: Load image
        run: docker load --input vault-${{ steps.vault-version.outputs.VAULT_VERSION }}.tar

      - name: Push image
        run: docker push ${{ vars.registry }}/${{ github.repository_owner }}/vault:${{ steps.vault-version.outputs.VAULT_VERSION }}